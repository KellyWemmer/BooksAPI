@using BooksAPI_Server.Models
@using BooksAPI_Server.Services
@inject OpenLibraryService OpenLibraryService
<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                @if(Book != null)
                {                   
                    <h5 class="book-title modal-title fw-bold">@Book.title</h5>
                    <button type="button" class="close btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="() => Close()"></button>
                }
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-6">
                            @if(Book != null)
                            {
                                <img class="book-img" src="@($"https://covers.openlibrary.org/b/id/{@Book.cover_i}-L.jpg")" />
                            } 
                            @if (booksResponse != null && booksResponse.docs != null)
                            {
                                <div class="row">
                                    @foreach (var item in booksResponse.docs)
                                    {
                                        <div class=col-2>
                                            @if (item.cover_i != 0)
                                            {                                                
                                                <img class="btn" src="@($"https://covers.openlibrary.org/b/id/{@item.cover_i}-S.jpg")" @onclick="() => GetNextEdition(item)">
                                            } 
                                            else
                                            {
                                                <img class="default-img btn" @onclick="() => GetNextEdition(item)" src="@($"https://images.unsplash.com/photo-1528459199957-0ff28496a7f6?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=443&q=80")" >
                                            }
                                        </div>
                                    }
                                </div>
                            } 
                            
                        </div>
                        <div class="col-6">
                            @if(Work != null && Work.description != null && Work.description.value != null)
                            {                                
                                <p>@Work.description.value</p>
                            }
                            else
                            {
                                <p>Description has not been provided.</p>
                                @if (buttonHidden == false)
                                {
                                    <button class="btn btn-secondary" @onclick="SearchEditions">Search Editions</button>                              
                                    
                                }
                                
                            }
                        </div>                  
                    </div>
                    <div class="row">
                        <div class="col">
                            @if (Book != null && Book.isbn != null && ISBN != null)
                            {
                                <a href='@($"https://www.amazon.com/dp/{ISBN}/?tag=internetarchi-20")' class="link-amazon">Search Amazon</a>
                            } 
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary">Want To Read</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Already Read</button>
            </div>
        </div>
    </div>
</div>

@code {
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public string ISBN = "";
    public bool ShowBackdrop = false;
    private Book Book { get; set; }
    private Work Work;
    private BooksAPI_Server.Components.BookModal Modal { get; set; }
    bool buttonHidden = false;
    BooksResponse booksResponse;   


    //Pass in the individual book as parameter on Open
    public void Open(Book book)
    {
        booksResponse = null;
        Book = book;
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        buttonHidden = false;
        string query = Book.key;
        Work = OpenLibraryService.SynopsisSearch(query);
        GetIsbn10Digit(Book.isbn);
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }

    private async Task SearchEditions()
    {
        List <string> authors = Book.author_name;
        string title = Book.title;
        buttonHidden = true;

        string query = "q=";

        if (title.Contains("("))
        {
            title = title.Remove(title.IndexOf(" ("));
        }

        if (title.Contains(":"))
        {
            title = title.Remove(title.IndexOf(":"));
        }        

        title = title.Replace(" ", "+");
        query += $"title%3A{title}";

        string authorString = authors.Aggregate((a, b) => a + " " + b).ToString();
        authorString = authorString.Replace(" ", "+");
        query += $"&author={authorString}";    

        booksResponse = await OpenLibraryService.SearchEditions(query);   
    }   

    private void GetNextEdition(Book book)
    {
        string query = book.key;
        Work = OpenLibraryService.SynopsisSearch(query);
    }

    private string GetIsbn10Digit(List<string> ISBNs)
    {
        ISBN = ISBNs.FirstOrDefault(i => i.Length <= 10);
        return ISBN;
    }

    

    




    

}
