@using BooksAPI_Server.Models
@using BooksAPI_Server.Services
@inject OpenLibraryService OpenLibraryService
<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                @if(Book != null)
                {                   
                    <h5 class="book-title modal-title fw-bold">@Book.title</h5>
                    <button type="button" class="close btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="() => Close()"></button>
                }
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-6">
                            @if(Book != null)
                            {
                                <img class="book-img" src="@($"https://covers.openlibrary.org/b/id/{@Book.cover_i}-L.jpg")" />
                            } 
                            <div class="row">
                                <div class=col-6>
                                    <p>Cover images of all editions will be printed here to click on</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            @if(Work != null && Work.description != null && Work.description.value != null)
                            {                                
                                <p>@Work.description.value</p>
                            }
                            else
                            {
                                <p>Description has not been provided.</p> 
                                //Toggle button to hidden once clicked
                                <button class="btn btn-secondary" @onclick="SearchEditions">Search Editions</button>
                                <p>(Once clicked, all editions will render below. Click on edition cover image and synopsis will generate here.)</p>                               
                            }
                        </div>                  
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary">Want To Read</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Already Read</button>
            </div>
        </div>
    </div>
</div>

@code {
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;
    private Book Book { get; set; }
    private Work Work;
    private BooksAPI_Server.Components.BookModal Modal { get; set; }

    BooksResponse booksResponse;   


    //Pass in the individual book as parameter on Open
    public void Open(Book book)
    {
        Book = book;
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        string query = Book.key;
        Work = OpenLibraryService.SynopsisSearch(query);        
        StateHasChanged();

    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }

    private async Task SearchEditions()
    {
        List <string> author = Book.author_name;
        string title = Book.title;

        string query = "q=";

        title = title.Replace(" ", "+");
        query += $"title%3A{title}";               
                  
        
        author = author.Replace(" ", "+");
        query += $"&author={author}";    
        
        booksResponse = await OpenLibraryService.SearchEditions(query);        

    }    

    

    




    

}
